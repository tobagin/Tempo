name: Create Flathub PR on Tag

on:
  push:
    tags:
      - 'v*.*.*'  # Matches v1.0.0, v1.2.3, etc.
  workflow_dispatch:

jobs:
  update-manifest:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Extract version info
      id: version
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        COMMIT_HASH=$(git rev-parse $TAG_NAME)
        VERSION=${TAG_NAME#v}
        
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        echo "commit_hash=$COMMIT_HASH" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        echo "📦 Processing release: $TAG_NAME"
        echo "🔍 Commit hash: $COMMIT_HASH"
        echo "📈 Version: $VERSION"

    - name: Check manifest exists
      id: check
      run: |
        MANIFEST_FILE="packaging/io.github.tobagin.tempo.yml"
        
        if [[ ! -f "$MANIFEST_FILE" ]]; then
          echo "❌ Manifest file not found: $MANIFEST_FILE"
          exit 1
        fi
        
        echo "✅ Local manifest found: $MANIFEST_FILE"
        echo "📋 Current manifest tag and commit:"
        grep -A 2 "tag:" "$MANIFEST_FILE" || echo "Tag not found in expected format"
        
        echo "manifest_ready=true" >> $GITHUB_OUTPUT

    - name: Create Flathub PR
      if: steps.check.outputs.manifest_ready == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.FLATHUB_TOKEN }}
      run: |
        FLATHUB_REPO="flathub/io.github.tobagin.tempo"
        BRANCH_NAME="update-${{ steps.version.outputs.tag_name }}"
        
        echo "🔄 Cloning Flathub repository..."
        git clone https://x-access-token:$GITHUB_TOKEN@github.com/$FLATHUB_REPO.git flathub-repo
        cd flathub-repo
        
        git config user.email "action@github.com"
        git config user.name "GitHub Action (Tempo Updates)"
        
        # Delete the branch if it exists remotely
        git push https://x-access-token:$GITHUB_TOKEN@github.com/$FLATHUB_REPO.git --delete "$BRANCH_NAME" 2>/dev/null || true
        
        git checkout -b "$BRANCH_NAME"
        
        # Copy the updated manifest
        cp ../packaging/io.github.tobagin.tempo.yml ./io.github.tobagin.tempo.yml
        
        git add io.github.tobagin.tempo.yml
        git commit -m "Update to ${{ steps.version.outputs.tag_name }}

        🚀 **New Release: ${{ steps.version.outputs.tag_name }}**
        
        **Changes:**
        - Updated tag from previous version to ${{ steps.version.outputs.tag_name }}
        - Updated commit hash to ${{ steps.version.outputs.commit_hash }}
        - Automated update from upstream repository
        
        **Source:** https://github.com/tobagin/Tempo/releases/tag/${{ steps.version.outputs.tag_name }}
        
        ---
        *This PR was automatically created by GitHub Actions*"
        
        git push https://x-access-token:$GITHUB_TOKEN@github.com/$FLATHUB_REPO.git "$BRANCH_NAME"
        
        gh auth login --with-token <<< "$GITHUB_TOKEN"
        
        gh pr create \
          --title "📦 Update Tempo to ${{ steps.version.outputs.tag_name }}" \
          --body "🚀 **Automated update to ${{ steps.version.outputs.tag_name }}**

        This PR updates the Flatpak manifest with the latest release from the upstream repository.

        **Changes:**
        - **Tag:** \`${{ steps.version.outputs.tag_name }}\`
        - **Commit:** \`${{ steps.version.outputs.commit_hash }}\`
        - **Release:** https://github.com/tobagin/Tempo/releases/tag/${{ steps.version.outputs.tag_name }}

        **Automated Checks:**
        - ✅ Manifest syntax validated
        - ✅ Commit hash verified
        - ✅ Tag references confirmed

        ---
        
        **Test Build:**
        The Flathub CI will automatically build and test this update once the PR is created.

        **Merge Instructions:**
        If the test build passes, this PR can be safely merged to publish the update to Flathub.

        ---
        *🤖 This PR was automatically created by [GitHub Actions](https://github.com/tobagin/Tempo/actions)*" \
          --head "$BRANCH_NAME" \
          --base "master" \
          --repo "$FLATHUB_REPO"
        
        echo "✅ Created PR: https://github.com/$FLATHUB_REPO/pulls"

    - name: Summary
      if: always()
      run: |
        echo "## 📋 Workflow Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Tag:** \`${{ steps.version.outputs.tag_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** \`${{ steps.version.outputs.commit_hash }}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** \`${{ steps.version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ steps.check.outputs.manifest_ready }}" == "true" ]]; then
          echo "✅ **Manifest Ready:** Local Flatpak manifest found and validated" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Flathub PR Created:** Pull request submitted to Flathub repository" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Manifest Missing:** Local manifest not found or invalid" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Next Steps:**" >> $GITHUB_STEP_SUMMARY
        echo "1. Monitor the Flathub PR for CI build status" >> $GITHUB_STEP_SUMMARY
        echo "2. Once CI passes, the Flathub maintainers can merge the PR" >> $GITHUB_STEP_SUMMARY
        echo "3. The new version will be published to Flathub automatically" >> $GITHUB_STEP_SUMMARY